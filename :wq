class PairGenerator
  attr_accessor :leftover, :pairs

  def initialize
    @pairs = []
    @names = []
    employees_names
    generate_pairs
    check_previous_game
  end

  def generate_pairs
    shuffle_employees = @names.shuffle

    shuffle_employees.each_slice(2) do |a, b|
      if b.nil?
        @leftover = (a || b)
      else
        @pairs << [a, b]
      end
    end
  end

  def employees_names
    @employees = Employee.all

    @employees.each do |position|
      @names << position[:name]
    end
  end

  def check_previous_game
    previous_games = Game.where(year: (self.year - 2)..(self.year - 1)).order(year: :asc)
    previous_game.q:_pairs = previous_games.flat_map(&:pairs)
    @has_repeated_pairs = !previous_game_pairs & @pairs.empty?

    generate_pairs until @has_repeated_pairs
  end

  def change_leftover
    last_leftover = Game.where(year: (self.year -1))

  end
end
